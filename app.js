const items = [
    { name: '–±—É–º–∞–≥–∞ –¥–ª—è –≤—ã–ø–µ—á–∫–∏', emoji: 'üìú' },
    { name: '–≥–æ–≤—è–¥–∏–Ω–∞', emoji: 'ü•©' },
    { name: '–≥–æ—Ä–æ—Ö', emoji: 'üå±' },
    { name: '–¥–µ—Ç—Å–∫–∞—è –µ–¥–∞', emoji: 'üçº' },
    { name: '–¥–ª—è –ø–æ—Å—É–¥–æ–º–æ–π–∫–∏', emoji: 'üßΩ' },
    { name: '–∫ —á–∞—é', emoji: 'üç™' },
    { name: '–∫–∞—Ä—Ç–æ—à–∫–∞', emoji: 'ü•î' },
    { name: '–∫–∞—à–∞', emoji: 'ü•£' },
    { name: '–∫–µ—Ñ–∏—Ä', emoji: 'ü•õ' },
    { name: '–∫–æ—Ä–º –∂–∏–≤–æ—Ç–Ω—ã–º', emoji: 'üêæ' },
    { name: '–∫—É–∫—É—Ä—É–∑–∞ –≤ –±–∞–Ω–∫–µ', emoji: 'üåΩ' },
    { name: '–∫—É—Ä–∏—Ü–∞', emoji: 'üçó' },
    { name: '–ª–∞–ø—à–∞', emoji: 'üçú' },
    { name: '–ª—É–∫', emoji: 'üßÖ' },
    { name: '–º–∞–π–æ–Ω–µ–∑', emoji: 'ü•´' },
    { name: '–º–æ–ª–æ–∫–æ', emoji: 'ü•õ' },
    { name: '–º–æ—Ä–∫–æ–≤—å', emoji: 'ü•ï' },
    { name: '–º—É–∫–∞', emoji: 'üåæ' },
    { name: '–º—ã–ª–æ', emoji: 'üßº' },
    { name: '–º—é—Å–ª–∏', emoji: 'ü•£' },
    { name: '–º—ë–¥', emoji: 'üçØ' },
    { name: '–Ω–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—å –¥–ª—è –∫–æ—à–µ–∫', emoji: 'üê±' },
    { name: '–æ–≥—É—Ä—Ü—ã', emoji: 'ü•í' },
    { name: '–ø–µ–ª—å–º–µ–Ω–∏', emoji: 'ü•ü' },
    { name: '–ø–µ—Ä–µ—Ü —Å–ª–∞–¥–∫–∏–π', emoji: 'ü´ë' },
    { name: '–ø–µ—Ä–µ—Ü —Å—É—Ö–æ–π', emoji: 'üå∂Ô∏è' },
    { name: '–ø–∏—Ü—Ü–∞', emoji: 'üçï' },
    { name: '–ø–æ–¥–≥—É–∑–Ω–∏–∫', emoji: 'üçº' },
    { name: '–ø–æ–º–∏–¥–æ—Ä—ã', emoji: 'üçÖ' },
    { name: '–ø—Ä–∏–ø—Ä–∞–≤—ã', emoji: 'üåø' },
    { name: '—Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –º–∞—Å–ª–æ', emoji: 'üõ¢Ô∏è' },
    { name: '—Ä–∏—Å', emoji: 'üçö' },
    { name: '—Ä—ã–±–∞', emoji: 'üêü' },
    { name: '—Å–∞–ª–∞—Ç', emoji: 'ü•ó' },
    { name: '—Å–∞–ª—Ñ–µ—Ç–∫–∏', emoji: 'üßª' },
    { name: '—Å–∞—Ö–∞—Ä', emoji: 'üçö' },
    { name: '—Å–≤–∏–Ω–∏–Ω–∞', emoji: 'ü•©' },
    { name: '—Å–ª–∏–≤–æ—á–Ω–æ–µ –º–∞—Å–ª–æ', emoji: 'üßà' },
    { name: '—Å–º–µ—Ç–∞–Ω–∞', emoji: 'ü•£' },
    { name: '—Å–æ–∫', emoji: 'üçπ' },
    { name: '—Å–æ–ª—å', emoji: 'üßÇ' },
    { name: '—Å–æ—Å–∏—Å–∫–∏', emoji: 'üå≠' },
    { name: '—Å—Ç–∏—Ä–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ—à–æ–∫', emoji: 'üß∫' },
    { name: '—Å—ã—Ä', emoji: 'üßÄ' },
    { name: '—Ñ–æ–ª—å–≥–∞', emoji: 'üìú' },
    { name: '—Ñ—Ä—É–∫—Ç—ã', emoji: 'üçé' },
    { name: '—Ö–ª–µ–±', emoji: 'üçû' },
    { name: '—á–∏–ø—Å—ã', emoji: 'üçü' },
    { name: '—à—É–Ω—å–∫–∞', emoji: 'üçñ' },
    { name: '—è–π—Ü–∞', emoji: 'ü•ö' },
    { name: '–±–∞–Ω–∞–Ω—ã', emoji: 'üçå' },
    { name: '–±—É–º–∞–∂–Ω—ã–µ –ø–æ–ª–æ—Ç–µ–Ω—Ü–∞', emoji: 'üßª' },
    { name: '–≤–∏–Ω–æ', emoji: 'üç∑' },
    { name: '–≥—Ä–∏–±—ã', emoji: 'üçÑ' },
    { name: '–≥—É–±–∫–∏', emoji: 'üßΩ' },
    { name: '–¥–µ–∑–æ–¥–æ—Ä–∞–Ω—Ç', emoji: 'üß¥' },
    { name: '–¥—Ä–æ–∂–∂–∏', emoji: 'üçû' },
    { name: '–∑–µ–ª–µ–Ω—å', emoji: 'üåø' },
    { name: '–∑—É–±–Ω–∞—è –ø–∞—Å—Ç–∞', emoji: 'ü™•' },
    { name: '–∑—É–±–Ω–∞—è —â—ë—Ç–∫–∞', emoji: 'ü™•' },
    { name: '–π–æ–≥—É—Ä—Ç', emoji: 'ü•£' },
    { name: '–∫–∞–ø—É—Å—Ç–∞', emoji: 'ü•¨' },
    { name: '–∫–æ–ª–±–∞—Å–∞', emoji: 'ü•ì' },
    { name: '–∫–æ–Ω—Å–µ—Ä–≤—ã', emoji: 'ü•´' },
    { name: '–∫–æ—Ñ–µ', emoji: '‚òï' },
    { name: '–∫—Ä–µ–≤–µ—Ç–∫–∏', emoji: 'ü¶ê' },
    { name: '–ª–∞–º–ø—ã (–ª–∞–º–ø–æ—á–∫–∏)', emoji: 'üí°' },
    { name: '–º–æ—Ä–æ–∂–µ–Ω–æ–µ', emoji: 'üç®' },
    { name: '–º—É—Å–æ—Ä–Ω—ã–µ –ø–∞–∫–µ—Ç—ã', emoji: 'üóëÔ∏è' },
    { name: '–æ—Ä–µ—Ö–∏', emoji: 'ü•ú' },
    { name: '–ø–∏–≤–æ', emoji: 'üç∫' },
    { name: '–ø–æ–º–∞–∑–∞–Ω–∫–∞', emoji: 'ü•™' },
    { name: '–ø—Ä–æ–∫–ª–∞–¥–∫–∏ (–≥–∏–≥–∏–µ–Ω–∏—á–µ—Å–∫–∏–µ)', emoji: 'ü©∏' },
    { name: '—Å–∫–æ—Ç—á', emoji: 'üì¶' },
    { name: '—Å–ª–∏–≤–∫–∏', emoji: 'ü•õ' },
    { name: '—Å—É—Ö–æ—Ñ—Ä—É–∫—Ç—ã', emoji: 'üçá' },
    { name: '—Ç—É–∞–ª–µ—Ç–Ω–∞—è –±—É–º–∞–≥–∞', emoji: 'üßª' },
    { name: '—Ñ–∞—Ä—à', emoji: 'ü•©' },
    { name: '—á–∞–π', emoji: 'üçµ' },
    { name: '—á–∏—Å—Ç—è—â–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞', emoji: 'üßº' },
    { name: '—à–∞–º–ø—É–Ω—å, –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä', emoji: 'üß¥' },
    { name: '—à–æ–∫–æ–ª–∞–¥', emoji: 'üç´' },
    { name: '—è–≥–æ–¥—ã', emoji: 'üçì' }
];


document.addEventListener('DOMContentLoaded', () => {
    const shoppingListContainer = document.getElementById('shopping-list');
    const notesField = document.getElementById('notes');
    const toggleAllCheckbox = document.getElementById('toggle-all');
    const shareButton = document.getElementById('share-button');

    // Initialize shopping list
    function initializeShoppingList() {
        shoppingListContainer.innerHTML = '';
        items.sort((a, b) => a.name.localeCompare(b.name));
        items.forEach(item => {
            const itemElement = document.createElement('label');
            itemElement.innerHTML = `
                <input type="checkbox" class="shopping-item" data-name="${item.name}">
                ${item.emoji} ${item.name.charAt(0).toUpperCase() + item.name.slice(1)}
            `;
            shoppingListContainer.appendChild(itemElement);
        });
        loadFromLocalStorage();
    }

    // Load saved state from localStorage
    function loadFromLocalStorage() {
        const savedItems = JSON.parse(localStorage.getItem('shoppingItems') || '{}');
        document.querySelectorAll('.shopping-item').forEach(checkbox => {
            checkbox.checked = !!savedItems[checkbox.dataset.name];
        });
        notesField.value = localStorage.getItem('shoppingNotes') || '';
    }

    // Save state to localStorage
    function saveToLocalStorage() {
        const itemsState = {};
        document.querySelectorAll('.shopping-item').forEach(checkbox => {
            itemsState[checkbox.dataset.name] = checkbox.checked;
        });
        localStorage.setItem('shoppingItems', JSON.stringify(itemsState));
        localStorage.setItem('shoppingNotes', notesField.value);
    }

    // Toggle all items
    toggleAllCheckbox.addEventListener('change', () => {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã?')) {
            const isChecked = toggleAllCheckbox.checked;
            document.querySelectorAll('.shopping-item').forEach(checkbox => {
                checkbox.checked = isChecked;
            });
            saveToLocalStorage();
        } else {
            toggleAllCheckbox.checked = !toggleAllCheckbox.checked;
        }
    });

    // Share selected items
    shareButton.addEventListener('click', () => {
        const selectedItems = Array.from(document.querySelectorAll('.shopping-item:checked'))
            .map(checkbox => `${checkbox.nextSibling.textContent.trim()}`)
            .join('\n');
        const notes = notesField.value.trim();
        const shareData = {
            title: '–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫',
            text: `–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫:\n${selectedItems}\n\n–ó–∞–º–µ—Ç–∫–∏:\n${notes}`
        };

        if (navigator.share) {
            navigator.share(shareData).catch(err => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—à–∞—Ä–∏–≤–∞–Ω–∏–∏:', err));
        } else {
            alert('–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Web Share API.');
        }
    });

    // Event listeners for changes
    shoppingListContainer.addEventListener('change', saveToLocalStorage);
    notesField.addEventListener('input', saveToLocalStorage);

    // Initialize the app
    initializeShoppingList();
});